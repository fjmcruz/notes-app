{"version":3,"sources":["Sidebar.js","Main.js","App.js","index.js"],"names":["Sidebar","notes","activeNote","setActiveNote","onAddNote","onDeleteNote","setShowEdit","sortedNotes","sort","a","b","lastModified","className","onClick","map","note","id","title","body","substring","Date","toLocaleDateString","hour","minute","Main","showEdit","onUpdateNote","onEditField","key","value","now","onEdit","type","onChange","e","target","autoFocus","placeholder","App","useState","localStorage","JSON","parse","setNotes","useEffect","setItem","stringify","newNote","uuid","idToDelete","filter","find","updatedNote","updatedNotesArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bbe7944.chunk.js","sourcesContent":["function Sidebar({\r\n  notes,\r\n  activeNote,\r\n  setActiveNote,\r\n  onAddNote,\r\n  onDeleteNote,\r\n  setShowEdit,\r\n}) {\r\n  const sortedNotes = notes.sort((a, b) => b.lastModified - a.lastModified);\r\n\r\n  return (\r\n    <div className=\"app-sidebar\">\r\n      <div className=\"app-sidebar-header\">\r\n        <h1>Notes:</h1>\r\n        <button\r\n          onClick={() => {\r\n            onAddNote();\r\n            setShowEdit(true);\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n      <div className=\"app-sidebar-notes\">\r\n        {/* Output sidebar note for each notes in the array. */}\r\n        {sortedNotes.map((note) => (\r\n          <div\r\n            className={`app-sidebar-note ${note.id === activeNote && \"active\"}`}\r\n            onClick={() => {\r\n              setActiveNote(note.id);\r\n              setShowEdit(false);\r\n            }}\r\n          >\r\n            <div className=\"sidebar-note-title\">\r\n              <strong>{note.title}</strong>\r\n              <button onClick={() => onDeleteNote(note.id)}>Delete</button>\r\n            </div>\r\n            <p>{note.body && note.body.substring(0, 40) + \"...\"}</p>\r\n            <small className=\"note-meta\">\r\n              Last modified:{\" \"}\r\n              {new Date(note.lastModified).toLocaleDateString(\"en-PH\", {\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n              })}\r\n            </small>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import ReactMarkdown from \"react-markdown\";\r\n\r\nfunction Main({ activeNote, showEdit, setShowEdit, onUpdateNote }) {\r\n  const onEditField = (key, value) => {\r\n    onUpdateNote({\r\n      ...activeNote,\r\n      [key]: value,\r\n      lastModified: Date.now(),\r\n    });\r\n  };\r\n\r\n  const onEdit = () => {\r\n    if (!showEdit) {\r\n      setShowEdit(true);\r\n    } else {\r\n      setShowEdit(false);\r\n    }\r\n  };\r\n\r\n  if (!activeNote) {\r\n    return <div className=\"no-active-note\">No note selected.</div>;\r\n  } else if (!showEdit) {\r\n    return (\r\n      <div className=\"app-main-note-preview\">\r\n        <div className=\"title-bar\">\r\n          <h1>{activeNote.title}</h1>\r\n          <button onClick={onEdit}>Edit</button>\r\n        </div>\r\n        <ReactMarkdown className=\"markdown-preview\">\r\n          {activeNote.body}\r\n        </ReactMarkdown>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-main-note-edit\">\r\n      <input\r\n        type=\"text\"\r\n        id=\"title\"\r\n        value={activeNote.title}\r\n        onChange={(e) => onEditField(\"title\", e.target.value)}\r\n        autoFocus\r\n      />\r\n      <textarea\r\n        id=\"body\"\r\n        value={activeNote.body}\r\n        onChange={(e) => onEditField(\"body\", e.target.value)}\r\n        placeholder=\"Write your note here...\"\r\n      />\r\n      <button onClick={onEdit}>Save</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { useState, useEffect } from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport Sidebar from \"./Sidebar.js\";\r\nimport Main from \"./Main.js\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [notes, setNotes] = useState(\r\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\r\n  );\r\n\r\n  const [activeNote, setActiveNote] = useState(false);\r\n\r\n  const [showEdit, setShowEdit] = useState(false);\r\n\r\n  const getActiveNote = () => {\r\n    return notes.find((note) => note.id === activeNote);\r\n  };\r\n\r\n  const onAddNote = () => {\r\n    const newNote = {\r\n      id: uuid(),\r\n      title: \"Untitled Note\",\r\n      body: \"\",\r\n      lastModified: Date.now(),\r\n    };\r\n    // Append to current array.\r\n    setNotes([newNote, ...notes]);\r\n    // Set new note to active note.\r\n    setActiveNote(newNote.id);\r\n  };\r\n\r\n  const onDeleteNote = (idToDelete) => {\r\n    setNotes(notes.filter((note) => note.id !== idToDelete));\r\n  };\r\n\r\n  const onUpdateNote = (updatedNote) => {\r\n    const updatedNotesArray = notes.map((note) => {\r\n      if (note.id === activeNote) {\r\n        return updatedNote;\r\n      } else {\r\n        return note;\r\n      }\r\n    });\r\n    setNotes(updatedNotesArray);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n  }, [notes]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Sidebar\r\n        notes={notes}\r\n        activeNote={activeNote}\r\n        setActiveNote={setActiveNote}\r\n        onAddNote={onAddNote}\r\n        onDeleteNote={onDeleteNote}\r\n        setShowEdit={setShowEdit}\r\n      />\r\n      <Main\r\n        activeNote={getActiveNote()}\r\n        showEdit={showEdit}\r\n        setShowEdit={setShowEdit}\r\n        onUpdateNote={onUpdateNote}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}